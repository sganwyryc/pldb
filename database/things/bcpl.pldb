title BCPL
appeared 1966
type pl
creators Martin Richards

example
 GET "LIBHDR"
 
 LET START() = VALOF $(
         FOR I = 1 TO 5 DO
                 WRITEF("%N! = %I4*N", I, FACT(I))
         RESULTIS 0
 $)
 
 AND FACT(N) = N = 0 -> 1, N * FACT(N - 1)

wikipedia https://en.wikipedia.org/wiki/BCPL
 example
  GET "LIBHDR"
  
  GLOBAL $(
  	COUNT: 200
  	ALL: 201
  $)
  
  LET TRY(LD, ROW, RD) BE
  	TEST ROW = ALL THEN
  		COUNT := COUNT + 1
  	ELSE $(
  		LET POSS = ALL & ~(LD | ROW | RD)
  		UNTIL POSS = 0 DO $(
  			LET P = POSS & -POSS
  			POSS := POSS - P
  			TRY(LD + P << 1, ROW + P, RD + P >> 1)
  		$)
  	$)
  
  LET START() = VALOF $(
  	ALL := 1
  	FOR I = 1 TO 12 DO $(
  		COUNT := 0
  		TRY(0, 0, 0)
  		WRITEF("%I2-QUEENS PROBLEM HAS %I5 SOLUTIONS*N", I, COUNT)
  		ALL := 2 * ALL + 1
  	$)
  	RESULTIS 0
  $)
 related cpl b c go pascal java fortran cpl
 summary BCPL ("Basic Combined Programming Language"; or 'Before C Programming Language' (a common humorous backronym) ) is a procedural, imperative, and structured computer programming language. Originally intended for writing compilers for other languages, BCPL is no longer in common use. However, its influence is still felt because a stripped down and syntactically changed version of BCPL, called B, was the language on which the C programming language was based. BCPL introduced several features of modern programming languages, including using curly braces to delimit code blocks; compilation via virtual machine byte code; and the world's first 'hello world' demonstrator program.
 pageId 4052
 dailyPageViews 206
 created 2001
 backlinksCount 176
 revisionCount 291
 appeared 1966

helloWorldCollection Basic Combined Programming Language
 // Hello world in BCLP
 GET "libhdr"
 
 LET start() = VALOF
 $( writes("Hello world*N")
    RESULTIS 0
 $)
 

standsFor Basic Combined Programming Language
status active
country GB
fileType text

tiobe bc

hopl 374

rosettaCode BCPL

centralPackageRepositoryCount 0
goodreads
 title|year|author|goodreadsId|rating|ratings|reviews
 Bcpl: The Language and Its Compiler|1981|Martin Richards|4472135|4.33|3|1
 Bcpl: The Language and Its Compiler|1980|M. Richards|3919566|2.00|1|0
 Bcpl On The Bbc Microcomputer User Guide||Chris Jobson|4321106|0.0|0|0
 Curly Bracket Programming Languages: C, Java, C++, Perl, JavaScript, PHP, Ruby, Bcpl, awk, Quakec, Objective-C, Cyclone, Pike, Unrealscript, Rc|2010|Books LLC|14292084|3.00|1|0
dblp https://dblp.org/search?q=$BCPL$
 hits 11
 publications
  title|year|doi|url
  How BCPL Evolved from CPL.|2013|10.1093/COMJNL/BXS026|https://dblp.org/rec/journals/cj/Richards13
  Guarded and Unguarded Coroutines: an Implementation in BCPL.|1984|10.1002/SPE.4380140408|https://dblp.org/rec/journals/spe/Fischer84
  A &apos;Database&apos; Subsystem for BCPL.|1982|10.1093/COMJNL/25.4.448|https://dblp.org/rec/journals/cj/Brooker82
  The Transfer of a BCPL Compiler to the Z80 Microcomputer.|1982|10.1002/SPE.4380120305|https://dblp.org/rec/journals/spe/CowderoyW82
  A Space-efficient Code Generation Scheme for BCPL.|1980|10.1002/SPE.4380100202|https://dblp.org/rec/journals/spe/AgarwalC80
  Implementing BCPL on the Borroughs B6700.|1980|10.1002/SPE.4380100806|https://dblp.org/rec/journals/spe/Lakos80
  A Coroutine Mechanism for BCPL.|1980|10.1002/SPE.4380101002|https://dblp.org/rec/journals/spe/MoodyR80
  An Effective Program Development Environment for BCPL on a Small Computer.|1978|10.1002/SPE.4380080304|https://dblp.org/rec/journals/spe/AtkinsonJ78
  JUMBO-A Demonstration Program to Illustrate the Use of BCPL in a Real-time Graphics Application Requiring Scaled Arithmetic.|1976|10.1002/SPE.4380060211|https://dblp.org/rec/journals/spe/Richards76
  The Portability of the BCPL Compiler.|1971|10.1002/SPE.4380010204|https://dblp.org/rec/journals/spe/Richards71