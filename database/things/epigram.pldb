title Epigram
appeared 2004
type pl

patterns
 hasDependentTypes? true

wikipedia https://en.wikipedia.org/wiki/Epigram_(programming_language)
 example
  plus x y <= rec x {
    plus x y <= case x {
      plus zero y => y
      plus (suc x) y => suc (plus x y)
    }
  }
 related linux agda idris coq haskell dependent-ml
 summary Epigram is a functional programming language with dependent types. Epigram also refers to the IDE usually packaged with the language. Epigram's type system is strong enough to express program specifications. The goal is to support a smooth transition from ordinary programming to integrated programs and proofs whose correctness can be checked and certified by the compiler. Epigram exploits the propositions as types principle, and is based on intuitionistic type theory. The Epigram prototype was implemented by Conor McBride based on joint work with James McKinna. Its development is continued by the Epigram group in Nottingham, Durham, St Andrews and Royal Holloway in the UK. The current experimental implementation of the Epigram system is freely available together with a user manual, a tutorial and some background material. The system has been used under Linux, Windows and Mac OS X. It is currently unmaintained, and version 2, which was intended to implement Observational Type Theory, was never officially released, however there exists a GitHub mirror, last updated in 2012. The design of Epigram and Epigram 2 have inspired the development of other systems such as Agda, Idris and Coq.
 pageId 1933143
 created 2005
 backlinksCount 31
 revisionCount 87
 dailyPageViews 23
 appeared 2004

reference http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.115.9718&rep=rep1&type=pdf
status historical
country GB
fileType text
isOpenSource true

hopl 8173

rosettaCode Epigram

centralPackageRepositoryCount 0
creators Conor McBride
dblp https://dblp.org/search?q=$Epigram$
 hits 5
 publications
  title|year|doi|url
  EpiGRAM: Practical Garbled RAM.|2022|10.1007/978-3-031-06944-4_1|https://dblp.org/rec/conf/eurocrypt/HeathKO22
  The EPiGRAM Project: Preparing Parallel Programming Models for Exascale.|2016|10.1007/978-3-319-46079-6_5|https://dblp.org/rec/conf/supercomputer/MarkidisPTRBMRH16
  Epigram Prime: A Demonstration.|2010|10.1145/1863597.1863610|https://dblp.org/rec/conf/icfp/Morris10
  Epigram reloaded: a standalone typechecker for ETT.|2005||https://dblp.org/rec/conf/sfp/ChapmanAM05
  Epigram: Practical Programming with Dependent Types.|2004|10.1007/11546382_3|https://dblp.org/rec/conf/afp/McBride04