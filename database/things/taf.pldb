title taf
appeared 2012
type pl

example
 (define (make-person name email)
   #(person :name name :email email)) ; creates a person record with name and email fields
 
 (define-generic (to-string obj))
 (define-method (to-string (obj #(person :name :email))) ; matches persons and binds name and email field to local variables
   (concat (list name " <" email ">")))
 
 (to-string (make-person "Manuel" "msimoni@gmail.com"))
 ; ==> "Manuel <msimoni@gmail.com>"

description A Lisp with row polymorphism, delimited continuations, and hygienic macros. [vaporware]

githubRepo https://github.com/manuel/taf
 firstCommit 2012
 stars 56
 forks 2
 subscribers 9
 created 2012
 updated 2022
 description A Lisp with row polymorphism, delimited continuations, and hygienic macros. [vaporware]
 issues 0

reference http://www.manuelsimoni.net/taf/doc/plan.html
creators Manuel Simoni
lineCommentKeyword ;
features
 hasLineComments true
  ; A comment
 hasComments true
  ; A comment