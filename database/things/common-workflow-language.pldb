title CWL
appeared 2014
type pl

description The Common Workflow Language (CWL) is a specification for describing analysis workflows and tools in a way that makes them portable and scalable across a variety of software and hardware environments, from workstations to cluster, cloud, and high performance computing (HPC) environments. CWL is designed to meet the needs of data-intensive science, such as Bioinformatics, Medical Imaging, Astronomy, Physics, and Chemistry.

githubLanguage Common Workflow Language
 fileExtensions cwl
 trendingProjectsCount 0

githubRepo https://github.com/common-workflow-language/cwltool
 firstCommit 2014
 stars 284
 forks 193
 subscribers 48
 created 2015
 updated 2022
 description Common Workflow Language reference implementation
 issues 396

linguistGrammarRepo https://github.com/manabuishii/language-cwl
 firstCommit 2017
 lastCommit 2018
 committerCount 5
 commitCount 41
 sampleCount 1
 example
  #!/usr/bin/env cwl-runner
  # Originally from
  # https://github.com/Duke-GCB/GGR-cwl/blob/54e897263a702ff1074c8ac814b4bf7205d140dd/utils/trunk-peak-score.cwl
  # Released under the MIT License:
  # https://github.com/Duke-GCB/GGR-cwl/blob/54e897263a702ff1074c8ac814b4bf7205d140dd/LICENSE
  # Converted to CWL v1.0 syntax using
  # https://github.com/common-workflow-language/cwl-upgrader
  # and polished by Michael R. Crusoe <mrc@commonwl.org>
  # All modifications also released under the MIT License
  cwlVersion: v1.0
  class: CommandLineTool
  doc: Trunk scores in ENCODE bed6+4 files
  
  hints:
    DockerRequirement:
      dockerPull: dukegcb/workflow-utils
  
  inputs:
    peaks:
      type: File
    sep:
      type: string
      default: \t
  
  outputs:
    trunked_scores_peaks:
      type: stdout
  
  baseCommand: awk
  
  arguments:
  - -F $(inputs.sep)
  - BEGIN{OFS=FS}$5>1000{$5=1000}{print}
  - $(inputs.peaks.path)
  
  stdout: $(inputs.peaks.nameroot).trunked_scores$(inputs.peaks.nameext)
  

website https://www.commonwl.org/
reference https://doi.org/10.6084/m9.figshare.3115156.v2
status active
fileType text
isOpenSource true
centralPackageRepositoryCount 0
dblp https://dblp.org/search?q=$CWL$
 hits 8
 publications
  title|year|doi|url
  From Biometrics to Forensics: A Feature Collection and First Feature Fusion Approaches for Latent Fingerprint Detection Using a Chromatic White Light (CWL) Sensor.|2012|10.1007/978-3-642-32805-3_21|https://dblp.org/rec/conf/cms/FischerKGSV12
  Computer-Aided Contact-Less Localization of Latent Fingerprints in Low-Resolution CWL Scans.|2012|10.1007/978-3-642-32805-3_7|https://dblp.org/rec/conf/cms/MakrushinKFGVD12
  Novel fingerprint aging features using binary pixel sub-tendencies: A comparison of contactless CLSM and CWL sensors.|2012|10.1109/WIFS.2012.6412617|https://dblp.org/rec/conf/wifs/MerkelDV12
  Approximation of a Mathematical Aging Function for Latent Fingerprint Traces Based on First Experiments Using a Chromatic White Light (CWL) Sensor and the Binary Pixel Aging Feature.|2011|10.1007/978-3-642-24712-5_5|https://dblp.org/rec/conf/cms/MerkelDV11
  Resolution and size of measured area influences on the short- and long-term aging of latent fingerprint traces using the binary pixel feature and a high-resolution non-invasive chromatic white light (CWL) sensor.|2011||https://dblp.org/rec/conf/imspa/MerkelD11
  Evaluation of binary pixel aging curves of latent fingerprint traces for different surfaces using a chromatic white light (CWL) sensor.|2011|10.1145/2037252.2037262|https://dblp.org/rec/conf/mmsec/MerkelBKDV11
  How contact pressure, contact time, smearing and oil/skin lotion influence the aging of latent fingerprint traces: First results for the binary pixel feature using a CWL sensor.|2011|10.1109/WIFS.2011.6123153|https://dblp.org/rec/conf/wifs/MerkelDV11
  System-on-chip validation using UML and CWL.|2004|10.1145/1016720.1016745|https://dblp.org/rec/conf/codes/ZhuOHN04