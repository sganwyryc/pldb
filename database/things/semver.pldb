title Semantic Versioning
appeared 2011
type schema
creators Tom Preston-Werner

example
 1.5.12

description Semantic versioning (aka SemVer)[1], currently the best known and most widely adopted version scheme in this category, uses a sequence of three digits (Major.Minor.Patch), an optional prerelease tag and optional build meta tag. In this scheme, risk and functionality are the measures of significance. Breaking changes are indicated by increasing the major number (high risk), new non-breaking features increment the minor number (medium risk) and all other non-breaking changes increment the patch number (lowest risk). The presence of a prerelease tag (-alpha, -beta) indicates substantial risk, as does a major number of zero (0.y.z), which is used to indicate a work-in-progress that may contain any level of potentially breaking changes (highest risk).

githubRepo https://github.com/semver/semver
 firstCommit 2011
 stars 6140
 forks 747
 subscribers 186
 created 2011
 updated 2022
 description Semantic Versioning Specification
 issues 116

website https://semver.org/
aka SemVer semver
status active
fileType text
isOpenSource true
centralPackageRepositoryCount 0
dblp https://dblp.org/search?q=$Semantic Versioning$
 hits 14
 publications
  title|year|doi|url
  Putting the semantics into semantic versioning.|2020|10.1145/3426428.3426922|https://dblp.org/rec/conf/oopsla/LamDP20
  Putting the Semantics into Semantic Versioning.|2020||https://dblp.org/rec/journals/corr/abs-2008-07069
  Breaking bad? Semantic versioning and impact of breaking changes in Maven Central.|2022|10.1007/S10664-021-10052-Y|https://dblp.org/rec/journals/ese/OchoaDFV22
  A Machine Learning Approach to Determine the Semantic Versioning Type of npm Packages Releases.|2022|10.48550/ARXIV.2204.05929|https://dblp.org/rec/journals/corr/abs-2204-05929
  On the practice of semantic versioning for Ansible galaxy roles: An empirical study and a change classification model.|2021|10.1016/J.JSS.2021.111059|https://dblp.org/rec/journals/jss/OpdebeeckZVR21
  What Do Package Dependencies Tell Us About Semantic Versioning?|2021|10.1109/TSE.2019.2918315|https://dblp.org/rec/journals/tse/DecanM21
  Deep Semantic Versioning for Evolution and Variability.|2021|10.1145/3479394.3479416|https://dblp.org/rec/conf/ppdp/CarvalhoS21
  Breaking Bad? Semantic Versioning and Impact of Breaking Changes in Maven Central.|2021||https://dblp.org/rec/journals/corr/abs-2110-07889
  Does Infrastructure as Code Adhere to Semantic Versioning? An Analysis of Ansible Role Evolution.|2020|10.1109/SCAM51674.2020.00032|https://dblp.org/rec/conf/scam/OpdebeeckZVR20
  Semantic versioning and impact of breaking changes in the Maven repository.|2017|10.1016/J.JSS.2016.04.008|https://dblp.org/rec/journals/jss/RaemaekersDV17