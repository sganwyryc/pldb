title Erlang
appeared 1986
type pl
creators Joe Armstrong and Robert Virding and Mike Williams
website https://www.erlang.org
fileExtensions erl hrl
country Sweden
corporateDevelopers Ericsson
domainName erlang.org
 registered 1998

visualParadigm false

features
 hasStrings true
  "hello world"
 canDoShebang true
  #!/usr/bin/env escript
 hasComments true
  % hello world program
 hasMultiLineComments false
 hasDirectives true
  -define(TIMEOUT, 200).
  ...
  call(Request) ->
     server:call(refserver, Request, ?TIMEOUT).
  -undef(Macro).
 hasImports true
  -include("my_records.hrl").
  -include("incdir/my_records.hrl").
  -include("/home/user/proj/my_records.hrl").
  -include("$PROJ_ROOT/my_records.hrl").
  -include_lib("kernel/include/file.hrl").
 hasExports true
  -export([start/0, codeswitch/1]).
 hasMacros true
  -define(Const, Replacement).
  -define(Func(Var1,...,VarN), Replacement).
 hasLineComments true
  % A comment
 hasMessagePassing true
 hasPrintDebugging true
 hasSemanticIndentation false
 hasFunctions true
 hasConditionals true

lineCommentToken %
printToken io:format
keywords after and andalso begin bnot bor bsl bsr bxor case catch cond div end fun if let not of or orelse receive rem try when xor

wikipedia https://en.wikipedia.org/wiki/Erlang_(programming_language)
 example
  %% Second version
    -module(counter).
    -export([start/0, codeswitch/1]).
  
    start() -> loop(0).
  
    loop(Sum) ->
      receive
         {increment, Count} ->
            loop(Sum+Count);
         reset ->
            loop(0);
         {counter, Pid} ->
            Pid ! {counter, Sum},
            loop(Sum);
         code_switch ->
            ?MODULE:codeswitch(Sum)
      end.
  
    codeswitch(Sum) -> loop(Sum).
 related prolog smalltalk plex f-sharp clojure rust scala opa elixir dart oz java ascii occam csp lfe lisp
 summary Erlang ( ER-lang) is a general-purpose, concurrent, functional programming language, as well as a garbage-collected runtime system. The term Erlang is used interchangeably with Erlang/OTP, or OTP, which consists of the Erlang runtime system, a number of ready-to-use components mainly written in Erlang, and a set of design principles for Erlang programs. The Erlang runtime system is known for its designs that are well suited for systems with the following characteristics: Distributed Fault-tolerant Soft real-time, Highly available, non-stop applications Hot swapping, where code can be changed without stopping a system. The Erlang programming language is known for the following properties: Immutable data Pattern matching Functional programming The sequential subset of the Erlang language supports eager evaluation, single assignment, and dynamic typing. It was originally a proprietary language within Ericsson, developed by Joe Armstrong, Robert Virding and Mike Williams in 1986, but was released as open source in 1998. Erlang/OTP is supported and maintained by the OTP product unit at Ericsson.
 pageId 9646
 dailyPageViews 857
 created 2001
 backlinksCount 605
 revisionCount 1311
 appeared 1986
 fileExtensions erl hrl

githubLanguage Erlang
 fileExtensions erl appsrc es escript hrl xrl yrl
 trendingProjects
  author name avatar url language languageColor stars forks currentPeriodStars description
  emqx emqx https://github.com/emqx.png https://github.com/emqx/emqx Erlang #B83998 4937 943 140 "EMQ X Broker - Scalable Distributed MQTT Message Broker for IoT in 5G Era"
  rabbitmq rabbitmq-server https://github.com/rabbitmq.png https://github.com/rabbitmq/rabbitmq-server Erlang #B83998 6212 1921 158 "Open source multi-protocol messaging broker"
 trendingProjectsCount 3

antlr https://github.com/antlr/grammars-v4/tree/master/erlang
codeMirror erlang
pygmentsHighlighter Erlang
 filename erlang.py
 fileExtensions erl hrl es escript
linguistGrammarRepo https://github.com/textmate/erlang.tmbundle
 firstCommit 2006
 lastCommit 2018
 committerCount 9
 commitCount 51
 sampleCount 10
 example
  #!/usr/bin/env escript
  -export([main/1]).
  
  main([]) -> io:format("Hello, World!~n").
  
languageServerProtocolProject https://github.com/erlang/sourcer
 writtenIn erlang

projectEuler Erlang
 memberCount
  2019 614
  2022 618
helloWorldCollection Erlang
 %% Hello World in Erlang
 
 -module(hello).
 
 -export([hello/0]).
 
 hello() ->
    io:format("Hello World!~n", []).
 
leachim6 Erlang
 filepath e/Erlang.erl
 fileExtensions erl
 example
  -module(erlang_hw).
  -export([start/0]).
  
  start() ->
    io:format("Hello World~n").
rosettaCode Erlang
quineRelay Erlang

rijuRepl https://riju.codes/erlang
 example
  -module(main).
  -export([main/0]).
  
  main() ->
      io:fwrite("Hello, world!\n").
  

indeedJobs erlang engineer
 2017 183
linkedInSkill erlang
 2018 12535
stackOverflowSurvey
 2021
  users 651
  medianSalary 80077
  fans 1379
  percentageUsing 0.01

subreddit erlang
 memberCount
  2017 6019
  2022 9057
meetup erlang-programming
 memberCount 104319
 groupCount 306

goodreads
 title|year|author|goodreadsId|rating|ratings|reviews
 Programming Erlang|2007|Joe Armstrong|794755|3.97|643|34
 ERLANG Programming|2009|Francesco Cesarini|4891279|4.06|190|10
 Concurrent Programming ERLANG|1995|Joe Armstrong|794756|4.00|15|2
 Introducing Erlang: Getting Started in Functional Programming|2012|Simon St. Laurent|21537283|3.95|41|4
 ERLANG and Elixir for Imperative Programmers||Wolfgang Loder|52899452|3.00|1|0
 Concurrent Programming in ERLANG|1993|Joe Armstrong|2594672|4.50|2|1

tiobe Erlang
 currentRank 49
hopl 1728

packageRepository https://hex.pm/

twitter erlang_org
ubuntuPackage erlang
jupyterKernel https://github.com/robbielynch/ierlang
jupyterKernel https://github.com/filmor/ierl
fileType text
isOpenSource true