title Idris
appeared 2014
type pl
creators Edwin Brady

patterns
 hasDependentTypes? true
 hasLineComments? true
  -- A comment

wikipedia https://en.wikipedia.org/wiki/Idris_(programming_language)
 example
  total
  pairAdd : Num a => Vect n a -> Vect n a -> Vect n a
  pairAdd Nil       Nil       = Nil
  pairAdd (x :: xs) (y :: ys) = x + y :: pairAdd xs ys
 related agda coq epigram haskell ml rust perl c javascript java jvm cil ocaml llvmir
 summary Idris is a general-purpose purely functional programming language with dependent types, strict or optional lazy evaluation and features such as a totality checker. Even before its possible usage for interactive theorem-proving, the focus of Idris is on general-purpose programming, like the purely functional Haskell, and with sufficient performance. The type system of Idris is similar to the one used by Agda and theorem-proving in it is similar to Coq, including tactics. In comparison, Idris has a priority on easy management of side-effects and support for implementing embedded domain specific languages. As of May 2017, Idris compiles to C (relying on a custom copying garbage collector using Cheney's algorithm) and JavaScript (both browser- and Node.js-based). There are also a number of third-party code generators for other platforms, including Java, JVM, CIL, OCaml, and a partial LLVM backend. The name Idris goes back to the character of the singing dragon in the 1970s UK kids' program Ivor the Engine.
 pageId 39035048
 dailyPageViews 123
 created 2013
 backlinksCount 38
 revisionCount 109
 appeared 2017
 fileExtensions idr lidr

githubLanguage Idris
 fileExtensions idr lidr
 trendingProjectsCount 0

githubRepo https://github.com/idris-lang/Idris-dev
 stars 3342
 forks 663
 subscribers 123
 created 2011
 updated 2022
 firstCommit 2011
 description A Dependently Typed Functional Programming Language
 issues 710

helloWorldCollection Idris
 Hello world in Idris
 
 > main : IO ()
 > main = putStrLn "Hello, World!"

linguistGrammarRepo https://github.com/idris-hackers/idris-sublime.git
 firstCommit 2013
 lastCommit 2017
 committerCount 6
 commitCount 24
 sampleCount 1
 example
  module Prelude.Char
  
  import Builtins
  
  isUpper : Char -> Bool
  isUpper x = x >= 'A' && x <= 'Z'
  
  isLower : Char -> Bool
  isLower x = x >= 'a' && x <= 'z'
  
  isAlpha : Char -> Bool
  isAlpha x = isUpper x || isLower x
  
  isDigit : Char -> Bool
  isDigit x = (x >= '0' && x <= '9')
  
  isAlphaNum : Char -> Bool
  isAlphaNum x = isDigit x || isAlpha x
  
  isSpace : Char -> Bool
  isSpace x = x == ' '  || x == '\t' || x == '\r' ||
              x == '\n' || x == '\f' || x == '\v' ||
              x == '\xa0'
  
  isNL : Char -> Bool
  isNL x = x == '\r' || x == '\n'
  
  toUpper : Char -> Char
  toUpper x = if (isLower x)
                 then (prim__intToChar (prim__charToInt x - 32))
                 else x
  
  toLower : Char -> Char
  toLower x = if (isUpper x)
                 then (prim__intToChar (prim__charToInt x + 32))
                 else x
  
  isHexDigit : Char -> Bool
  isHexDigit x = elem (toUpper x) hexChars where
    hexChars : List Char
    hexChars = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
                'A', 'B', 'C', 'D', 'E', 'F']
  

website http://idris-lang.org
status active

tryItOnline idris

fileExtensions idr lidr
fileType text
isOpenSource true

tiobe Idris

projectEuler Idris
 memberCount
  2019 10
  2022 11

rosettaCode Idris

writtenIn haskell
indeedJobs idris developer
 2017 1

lineCommentKeyword --
centralPackageRepositoryCount 0
rijuRepl https://riju.codes/idris
 example
  module Main
  
  main : IO ()
  main = putStrLn "Hello, world!"
  
dblp https://dblp.org/search?q=$Idris$
 hits 19
 publications
  title|year|doi|url
  idris-ct: A Library to do Category Theory in Idris.|2019|10.4204/EPTCS.323.16|https://dblp.org/rec/journals/corr/abs-1912-06191
  Elaborator reflection: extending Idris in Idris.|2016|10.1145/2951913.2951932|https://dblp.org/rec/conf/icfp/ChristiansenB16
  Idris 2: Quantitative Type Theory in Practice.|2021|10.4230/LIPICS.ECOOP.2021.9|https://dblp.org/rec/conf/ecoop/Brady21
  Idris 2: Quantitative Type Theory in Practice (Artifact).|2021|10.4230/DARTS.7.2.10|https://dblp.org/rec/journals/darts/Brady21
  Idris 2: Quantitative Type Theory in Practice.|2021||https://dblp.org/rec/journals/corr/abs-2104-00480
  Qimaera: Type-safe (Variational) Quantum Programming in Idris.|2021||https://dblp.org/rec/journals/corr/abs-2111-10867
  Maps of Malaya and Borneo: Discovery, Statehood and Progress: The Collections of H.R.H. Sultan Sharafuddin Idris Shah and Dato&apos; Richard Curtis.|2020|10.3138/CART-2019-0018|https://dblp.org/rec/journals/cartographica/Joll20
  Type-Driven Development with Idris.|2020|10.1017/S0956796820000143|https://dblp.org/rec/journals/jfp/Muijnck-Hughes20
  Building a Blockchain Simulation using the Idris Programming Language.|2019|10.1145/3299815.3314456|https://dblp.org/rec/conf/ACMse/PanK19
  A Dependently Typed Library for Static Information-Flow Control in Idris.|2019|10.1007/978-3-030-17138-4_3|https://dblp.org/rec/conf/post/GregersenTA19