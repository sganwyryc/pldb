title PowerQuery M
aka m
aka powerquery
appeared 2015
type queryLanguage

example
 "Hello World"             // a text value 
 123                       // a number 
 1 + 2                     // sum of two numbers 
 {1, 2, 3}                 // a list of three numbers 
 [ x = 1, y = 2 + 3 ]      // a record containing two fields: 
                           //        x and y 
 (x, y) => x + y           // a function that computes a sum 
 if 2 > 1 then 2 else 1    // a conditional expression 
 let x = 1 + 1  in x * 2   // a let expression 
 error "A"                 // error with message "A"

description The Power Query M formula language is optimized for building highly flexible data mashup queries. It's a functional, case sensitive language similar to F#.
reference https://docs.microsoft.com/en-us/powerquery-m/power-query-m-type-system
status active
centralPackageRepositoryCount 0
lineCommentToken //
features
 hasLineComments true
  // A comment
 hasComments true
  // A comment
 hasSemanticIndentation false
website https://docs.microsoft.com/en-us/powerquery-m/
corporateDevelopers Microsoft
example
 let Orders = Table.FromRecords({  
     [OrderID = 1, CustomerID = 1, Item = "fishing rod", Price = 100.0],  
     [OrderID = 2, CustomerID = 1, Item = "1 lb. worms", Price = 5.0],  
     [OrderID = 3, CustomerID = 2, Item = "fishing net", Price = 25.0]}),  
     #"Capitalized Each Word" = Table.TransformColumns(Orders, {"Item", Text.Proper})  
 in  
     #"Capitalized Each Word"
monaco powerquery