title GraphQL
appeared 2012
type queryLanguage
creators Lee Byron
subreddit GraphQL
 memberCount
  2022 17480

patterns
 hasBooleans? true
 hasEnums? true
  enum Episode {
    NEWHOPE
    EMPIRE
    JEDI
  }
 hasFloats? true
 hasInterfaces? true
  interface Character {
   id: ID!
   name: String!
   friends: [Character]
   appearsIn: [Episode]!
  }
  type Human implements Character {
    id: ID!
    name: String!
    friends: [Character]
    appearsIn: [Episode]!
    starships: [Starship]
    totalCredits: Int
  }
  type Droid implements Character {
    id: ID!
    name: String!
    friends: [Character]
    appearsIn: [Episode]!
    primaryFunction: String
  }
 hasIntegers? true
 hasStrings? true
 hasUnionTypes? true
  union SearchResult = Human | Droid | Starship
 hasLists? true
 hasIds? true
  # The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‚Äêreadable.
  query {
    hero {
      name
    }
    droid(id: "2000") {
      name
    }
  }

wikipedia https://en.wikipedia.org/wiki/GraphQL
 related javascript ruby scala
 summary GraphQL is a data query language developed internally by Facebook in 2012 before being publicly released in 2015. It provides an alternative to REST and ad-hoc webservice architectures.. It allows clients to define the structure of the data required, and exactly the same structure of the data is returned from the server. It is a strongly typed runtime which allows clients to dictate what data is needed. This avoids both the problems of over-fetching as well as under-fetching of data. Major GraphQL clients include Apollo Client and Relay. GraphQL servers are available for multiple languages, including JavaScript, Python, Ruby, Java, C#, Scala, Go, Elixir, Erlang, PHP, and Clojure.
 pageId 50353761
 dailyPageViews 195
 created 2016
 backlinksCount 15
 revisionCount 65
 appeared 2015

githubLanguage GraphQL
 fileExtensions graphql gql
 trendingProjectsCount 0

linguistGrammarRepo https://github.com/rmosolgo/language-graphql
 firstCommit 2015
 lastCommit 2018
 committerCount 6
 commitCount 47
 sampleCount 2
 example
  # Copyright (c) 2015, Facebook, Inc.
  # All rights reserved.
  #
  # This source code is licensed under the BSD-style license found in the
  # LICENSE file in the root directory of this source tree. An additional grant
  # of patent rights can be found in the PATENTS file in the same directory.
  
  schema {
    query: QueryType
    mutation: MutationType
  }
  
  type Foo implements Bar {
    one: Type
    two(argument: InputType!): Type
    three(argument: InputType, other: String): Int
    four(argument: String = "string"): String
    five(argument: [String] = ["string", "string"]): String
    six(argument: InputType = {key: "value"}): Type
  }
  
  interface Bar {
    one: Type
    four(argument: String = "string"): String
  }
  
  union Feed = Story | Article | Advert
  
  scalar CustomScalar
  
  enum Site {
    DESKTOP
    MOBILE
  }
  
  input InputType {
    key: String!
    answer: Int = 42
  }
  
  extend type Foo {
    seven(argument: [String]): Type
  }
  
  directive @skip(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT
  
  directive @include(if: Boolean!)
    on FIELD
     | FRAGMENT_SPREAD
     | INLINE_FRAGMENT
  

website http://graphql.org/
status active

twitter graphql

fileType text

antlr https://github.com/antlr/grammars-v4/tree/master/graphql

corporateDevelopers Facebook
languageServerProtocolProject https://github.com/graphql/graphql-language-service
 writtenIn javascript
languageServerProtocolProject https://github.com/Mayank1791989/gql-language-server
 writtenIn javascript
centralPackageRepositoryCount 0
dblp https://dblp.org/search?q=$GraphQL$
 hits 57
 publications
  title|year|doi|url
  Exploiting Declarative Mapping Rules for Generating GraphQL Servers with Morph-GraphQL.|2020|10.1142/S0218194020400070|https://dblp.org/rec/journals/ijseke/Chaves-FragaPAC20
  GraphQL Servers generation from R2RML with morph-GraphQL (D).|2019|10.18293/SEKE2019-231|https://dblp.org/rec/conf/seke/AlobaidCPC19
  morph-GraphQL: GraphQL Servers Generation from R2RML Mappings (S).|2019|10.18293/SEKE2019-055|https://dblp.org/rec/conf/seke/PriyatnaCAC19
  GraphQL-LD: Linked Data Querying with GraphQL.|2018||https://dblp.org/rec/conf/semweb/TaelmanSV18
  GraphQL for archival metadata: An overview of the EHRI GraphQL API.|2017|10.1109/BIGDATA.2017.8258173|https://dblp.org/rec/conf/bigdataconf/Bryant17
  Comparison of REST and GraphQL Interfaces for OPC UA.|2022|10.3390/COMPUTERS11050065|https://dblp.org/rec/journals/computers/Ala-LaurinahoMA22
  Harvesting Production GraphQL Queries to Detect Schema Faults.|2022|10.1109/ICST53961.2022.00014|https://dblp.org/rec/conf/icst/ZetterlundTMB22
  A Flexible GraphQL Northbound API for Intent-based SDN Applications.|2022|10.1109/NOMS54207.2022.9789785|https://dblp.org/rec/conf/noms/BannourDL22
  GraphSPARQL: a GraphQL interface for linked data.|2022|10.1145/3477314.3507655|https://dblp.org/rec/conf/sac/AngeleMBFF22
  Evaluating GraphQL and REST API Services Performance in a Massive and Intensive Accessible Information System.|2021|10.3390/COMPUTERS10110138|https://dblp.org/rec/journals/computers/LawiPY21