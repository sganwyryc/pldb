title Standard ML
appeared 1990
type pl

patterns
 hasTypeInference? true
 hasLineComments? false

wikipedia https://en.wikipedia.org/wiki/Standard_ML
 example
  - haar [1, 2, 3, 4, ~4, ~3, ~2, ~1];
     val it = [0,20,4,4,~1,~1,~1,~1]  : int list
 related alice dependent-ml hope elm fstar ocaml rust scala ml caml c poplog pop-11 common-lisp prolog emacs-editor isabelle extended-ml f-sharp
 summary Standard ML (SML; Standard Meta Language) is a general-purpose, modular, functional programming language with compile-time type checking and type inference. It is popular among compiler writers and programming language researchers, as well as in the development of theorem provers. SML is a modern dialect of ML, the programming language used in the Logic for Computable Functions (LCF) theorem-proving project. It is distinctive among widely used languages in that it has a formal specification, given as typing rules and operational semantics in The Definition of Standard ML (1990, revised and simplified as The Definition of Standard ML (Revised) in 1997).
 pageId 100337
 dailyPageViews 301
 created 2002
 backlinksCount 185
 revisionCount 411
 appeared 1997
 fileExtensions sml

githubLanguage Standard ML
 fileExtensions ML fun sig sml
 trendingProjects
  author name avatar url language languageColor stars forks currentPeriodStars description
  komeiji-satori Dress https://github.com/komeiji-satori.png https://github.com/komeiji-satori/Dress "Standard ML" #dc566d 11618 1639 636 "好耶 是女装"
 trendingProjectsCount 2

linguistGrammarRepo https://github.com/textmate/standard-ml.tmbundle
 firstCommit 2006
 lastCommit 2015
 committerCount 6
 commitCount 51
 sampleCount 5
 example
   
  signature LAZY_BASE =
     sig 
        type 'a lazy
        exception Undefined
        val force: 'a lazy -> 'a
        val delay: (unit -> 'a) -> 'a lazy
        val undefined: 'a lazy
     end
  
  signature LAZY' =
     sig
        include LAZY_BASE
        val isUndefined: 'a lazy -> bool
        val inject : 'a -> 'a lazy
        val toString: ('a -> string) -> 'a lazy -> string
        val eq: ''a lazy * ''a lazy -> bool
        val eqBy: ('a * 'a -> bool) -> 'a lazy * 'a lazy -> bool
        val compare: ('a * 'a -> order) -> 'a lazy * 'a lazy -> order
        val map: ('a -> 'b) -> 'a lazy -> 'b lazy
  
        structure Ops: 
                     sig
                        val ! : 'a lazy -> 'a (* force *)
                        val ? : 'a -> 'a lazy (* inject *)
                     end
     end
  

website http://sml-family.org
aka sml
aka standardml
status active
fileExtensions sml
fileType text

tiobe Standard ML

quineRelay Standard ML

ubuntuPackage mlton

lineCommentKeyword #
centralPackageRepositoryCount 0
rijuRepl https://riju.codes/standardml
 example
  print "Hello, world!\n";
  
dblp https://dblp.org/search?q=$Standard ML$
 hits 96
 publications
  title|year|doi|url
  A separate compilation extension to standard ML.|2006|10.1145/1159876.1159883|https://dblp.org/rec/conf/ml/SwaseyVCH06
  Real-time MLton: A Standard ML runtime for real-time functional programs.|2021|10.1017/S0956796821000174|https://dblp.org/rec/journals/jfp/ShivkumarMZ21
  The history of Standard ML.|2020|10.1145/3386336|https://dblp.org/rec/journals/pacmpl/MacQueenHR20
  A New Backend for Standard ML of New Jersey.|2020|10.1145/3462172.3462191|https://dblp.org/rec/conf/ifl/FarvardinR20
  Skalpel: A constraint-based type error slicer for Standard ML.|2017|10.1016/J.JSC.2016.07.013|https://dblp.org/rec/journals/jsc/RahliWPK17
  Close Encounters of the Higher Kind Emulating Constructor Classes in Standard ML.|2016||https://dblp.org/rec/journals/corr/NagashimaO16
  Classification and clustering for neuroinformatics: Assessing the efficacy on reverse-mapped NeuroNLP data using standard ML techniques.|2015|10.1109/ICACCI.2015.7275751|https://dblp.org/rec/conf/icacci/MelethadathilCN15
  MultiMLton: A multicore-aware runtime for standard ML.|2014|10.1017/S0956796814000161|https://dblp.org/rec/journals/jfp/SivaramakrishnanZJ14
  Skalpel: A Type Error Slicer for Standard ML.|2014|10.1016/J.ENTCS.2015.04.012|https://dblp.org/rec/journals/entcs/RahliWPK15
  Recursive structures for standard ML.|2012|10.1145/2442776.2442784|https://dblp.org/rec/journals/sigplan/Russo12