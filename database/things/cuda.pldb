title CUDA
appeared 2007
type pl
website https://developer.nvidia.com/cuda-zone
standsFor Compute Unified Device Architecture
corporateDevelopers Nvidia

features
 hasPrintDebugging true
 hasMultiLineComments true
  /* A comment
  */
 hasComments true
  /* A comment
  */
 hasSemanticIndentation false

multiLineCommentTokens /* */
printToken printf

wikipedia https://en.wikipedia.org/wiki/CUDA
 example
  import numpy
  from pycublas import CUBLASMatrix
  A = CUBLASMatrix( numpy.mat([[1,2,3]],[[4,5,6]],numpy.float32) )
  B = CUBLASMatrix( numpy.mat([[2,3]],[4,5],[[6,7]],numpy.float32) )
  C = A*B
  print C.np_mat()
 related linux c fortran opengl opencl llvmir python perl java ruby lua haskell r matlab idl mathematica common-lisp f-sharp
 summary CUDA is a parallel computing platform and application programming interface (API) model created by Nvidia. It allows software developers and software engineers to use a CUDA-enabled graphics processing unit (GPU) for general purpose processing â€“ an approach termed GPGPU (General-Purpose computing on Graphics Processing Units). The CUDA platform is a software layer that gives direct access to the GPU's virtual instruction set and parallel computational elements, for the execution of compute kernels. The CUDA platform is designed to work with programming languages such as C, C++, and Fortran. This accessibility makes it easier for specialists in parallel programming to use GPU resources, in contrast to prior APIs like Direct3D and OpenGL, which required advanced skills in graphics programming. Also, CUDA supports programming frameworks such as OpenACC and OpenCL. When it was first introduced by Nvidia, the name CUDA was an acronym for Compute Unified Device Architecture, but Nvidia subsequently dropped the use of the acronym.
 pageId 7933386
 dailyPageViews 1966
 created 2006
 backlinksCount 444
 revisionCount 1315
 appeared 2007

githubLanguage Cuda
 fileExtensions cu cuh
 trendingProjects
  author name avatar url language languageColor stars forks currentPeriodStars description
  rapidsai cudf https://github.com/rapidsai.png https://github.com/rapidsai/cudf Cuda #3A4E3A 1931 274 187 "cuDF - GPU DataFrame Library"
  DeepGraphLearning graphvite https://github.com/DeepGraphLearning.png https://github.com/DeepGraphLearning/graphvite Cuda #3A4E3A 433 47 285 "A general and high-performance graph embedding system for various applications"
 trendingProjectsCount 3

pygmentsHighlighter CUDA
 filename c_like.py
 fileExtensions cu cuh
linguistGrammarRepo https://github.com/harrism/sublimetext-cuda-cpp
 firstCommit 2012
 lastCommit 2017
 committerCount 3
 commitCount 25
 sampleCount 2
 example
  #include <stdio.h>
  #include <cuda_runtime.h>
  
  /**
   * CUDA Kernel Device code
   *
   * Computes the vector addition of A and B into C. The 3 vectors have the same
   * number of elements numElements.
   */
  __global__ void
  vectorAdd(const float *A, const float *B, float *C, int numElements)
  {
      int i = blockDim.x * blockIdx.x + threadIdx.x;
  
      if (i < numElements)
      {
          C[i] = A[i] + B[i];
      }
  }
  
  /**
   * Host main routine
   */
  int
  main(void)
  {
      // Error code to check return values for CUDA calls
      cudaError_t err = cudaSuccess;
  
      // Launch the Vector Add CUDA Kernel
      int threadsPerBlock = 256;
      int blocksPerGrid =(numElements + threadsPerBlock - 1) / threadsPerBlock;
      vectorAdd<<<blocksPerGrid, threadsPerBlock>>>(d_A, d_B, d_C, numElements);
      err = cudaGetLastError();
  
      if (err != cudaSuccess)
      {
          fprintf(stderr, "Failed to launch vectorAdd kernel (error code %s)!\n", cudaGetErrorString(err));
          exit(EXIT_FAILURE);
      }
  
      // Reset the device and exit
      err = cudaDeviceReset();
  
      return 0;
  }

helloWorldCollection Compute Unified Device Architecture
 // Hello world in CUDA
 
 #include <stdio.h>
  
 const int N = 16; 
 const int blocksize = 16; 
  
 __global__ 
 void hello(char *a, int *b) 
 {
 	a[threadIdx.x] += b[threadIdx.x];
 }
  
 int main()
 {
 	char a[N] = "Hello \0\0\0\0\0\0";
 	int b[N] = {15, 10, 6, 0, -11, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
  
 	char *ad;
 	int *bd;
 	const int csize = N*sizeof(char);
 	const int isize = N*sizeof(int);
  
 	printf("%s", a);
  
 	cudaMalloc( (void**)&ad, csize ); 
 	cudaMalloc( (void**)&bd, isize ); 
 	cudaMemcpy( ad, a, csize, cudaMemcpyHostToDevice ); 
 	cudaMemcpy( bd, b, isize, cudaMemcpyHostToDevice ); 
 	
 	dim3 dimBlock( blocksize, 1 );
 	dim3 dimGrid( 1, 1 );
 	hello<<<dimGrid, dimBlock>>>(ad, bd);
 	cudaMemcpy( a, ad, csize, cudaMemcpyDeviceToHost ); 
 	cudaFree( ad );
 	cudaFree( bd );
 	
 	printf("%s\n", a);
 	return EXIT_SUCCESS;
 }
leachim6 Cuda
 filepath c/Cuda.cu
 fileExtensions cu
 example
  #include <stdio.h>
  
  __global__ void hello_world(){
      printf("Hello World\n");
  }
  
  int main() {
      hello_world<<<1,1>>>();
      return 0;
  }
  

indeedJobs cuda engineer
 2017 483
linkedInSkill cuda
 2018 28572

meetup cuda
 memberCount 9400
 groupCount 32

goodreads
 title|year|author|goodreadsId|rating|ratings|reviews
 Cuda by Example: An Introduction to General-Purpose Gpu Programming|2010|Jason Sanders|12911195|4.03|131|13
 Professional Cuda C Programming|2014|John Cheng|39965022|4.14|7|0

fileType text
isOpenSource true
centralPackageRepositoryCount 0
isbndb 33
 year|publisher|title|authors|isbn13
 2010|Addison-Wesley Professional|CUDA by Example: An Introduction to General-Purpose GPU Programming|Sanders / Kandrot, Jason|9780131387683
 2013|Pearson|Cuda Handbook|Nicholas Wilt|9780133261493
 2014|Machinery Industry Press|CUDA Programming: A Developers Guide to Parallel Computing with GPUs(Chinese Edition)|[ MEI ] KU KE ( Shane Cook )|9787111448617
 2010|Addison-Wesley Professional|CUDA by Example: An Introduction to General-Purpose GPU Programming|Sanders, Jason and Kandrot, Edward|9780132180139
 2019-09-27T00:00:01Z|Packt Publishing|Learn CUDA Programming: A beginner's guide to GPU programming and parallel computing with CUDA 10.x and C/C++|Han, Jaegeun and Sharma, Bharatkumar|9781788996242
 2018|Packt Publishing|Hands-On GPU Programming with Python and CUDA: Explore high-performance parallel computing with CUDA|Tuomanen, Dr. Brian|9781788993913
 2014|Wrox|Professional CUDA C Programming|Cheng, John and Grossman, Max and McKercher, Ty|9781118739327
 2014|Wrox|Professional CUDA C Programming|Cheng, John and Grossman, Max and McKercher, Ty|9781118739310
 2013|Addison-Wesley Professional|The CUDA Handbook: A Comprehensive Guide to GPU Programming|Wilt, Nicholas Wilt|9780321809469
 2013|Morgan Kaufmann|CUDA Fortran for Scientists and Engineers: Best Practices for Efficient CUDA Fortran Programming|Ruetsch, Gregory and Fatica, Massimiliano|9780124169708
 2012|Morgan Kaufmann|CUDA Programming: A Developer's Guide to Parallel Computing with GPUs (Applications of Gpu Computing)|Cook, Shane|9780124159884
 2011|Morgan Kaufmann|CUDA Application Design and Development|Farber, Rob|9780123884329
 2013|Addison-Wesley Professional|CUDA Handbook, The: A Comprehensive Guide to GPU Programming|Wilt, Nicholas|9780133261509
 2012|Morgan Kaufmann|CUDA Programming: A Developer's Guide to Parallel Computing with GPUs (Applications of Gpu Computing)|Cook, Shane|9780124159334
 2011|Morgan Kaufmann|CUDA Application Design and Development|Farber, Rob|9780123884268
 2018|Apress|Deep Belief Nets in C++ and CUDA C: Volume 2: Autoencoding in the Complex Domain|Masters, Timothy|9781484236468
 2012|LAP LAMBERT Academic Publishing|Image Processing Using CUDA: Designing an object oriented framework for CUDA based image processing|Shete, Pritam and Bose, Surojit Kumar|9783659135569
 2016|Createspace Independent Publishing Platform|Cuda Winner|Charles Brown|9781540660251
 2016|Createspace Independent Publishing Platform|Cuda For Newbies|Dylan Skinner|9781540604323
 2015|Addison-Wesley Longman, Incorporated|Cuda For Engineers|Duane Storti|9780134177519
 2010|Pearson|CUDA by Example|Jason Sanders and Edward Kandrot|9780132180146
 2019-09-27|Packt Publishing|Learn CUDA Programming|Jaegeun Han and Bharatkumar Sharma|9781788991292
 20151102|Pearson Technology Group|CUDA for Engineers|Duane Storti; Mete Yurtoglu|9780134177557
 2014-09-02|Wiley Professional Development (P&T)|Professional CUDA C Programming|John Cheng, Max Grossman, Ty McKercher|9781118739273
 20220602|Cambridge University Press|Programming in Parallel with CUDA Programming in Parallel with CUDA|Richard Ansorge|9781108858885
 09/2013|Elsevier S & T|CUDA Fortran for Scientists and Engineers: Best Practices for Efficient CUDA Fortran Programming|Ruetsch, Gregory; Fatica, Massimiliano|9780124169722
 20180119|Taylor & Francis|GPU Parallel Program Development Using CUDA|Tolga Soyata|9781498750806
 27-11-2018|Packt Publishing|Hands-On GPU Programming with Python and CUDA|Dr. Brian Tuomanen|9781788995221
 |Wrox|Nvidia Gpu Programming: Massively Parallel Programming With Cuda|Cook and Shane|9780470939055
 2013|Addison-wesley|The Cuda Handbook: A Comprehensive Guide To Gpu Programming|Wilt, Nicholas , 1970-|9780133261516
 20180704|Springer Nature|Deep Belief Nets in C   and CUDA C: Volume 3|Timothy Masters|9781484237212
 20180423|Springer Nature|Deep Belief Nets in C   and CUDA C: Volume 1|Timothy Masters|9781484235911
 2019-01-23|LAP LAMBERT Academic Publishing|Novel Open Source Morphology Using GPU Processing With LTU- CUDA|Jagannathan Gnanasekaran|9786139444151