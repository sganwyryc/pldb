title halide
appeared 2010
type pl

example
 Func blur_3x3(Func input) {
  Func blur_x, blur_y;
  Var x, y, xi, yi;
 
  // The algorithm - no storage or order
  blur_x(x, y) = (input(x-1, y) + input(x, y) + input(x+1, y))/3;
  blur_y(x, y) = (blur_x(x, y-1) + blur_x(x, y) + blur_x(x, y+1))/3;
 
  // The schedule - defines order, locality; implies storage
  blur_y.tile(x, y, xi, yi, 256, 32)
        .vectorize(xi, 8).parallel(y);
  blur_x.compute_at(blur_y, x).vectorize(x, 8);
 
  return blur_y;
 }

description a language for fast, portable computation on images and tensors

githubRepo https://github.com/halide/Halide
 firstCommit 2010
 stars 4985
 forks 969
 subscribers 244
 created 2012
 updated 2022
 description a language for fast, portable data-parallel computation
 issues 769

website http://halide-lang.org/
https://news.ycombinator.com/item?id=7544855
status active
isOpenSource true
centralPackageRepositoryCount 0