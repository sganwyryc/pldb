title c3
appeared 2019
type pl
description C3 is a systems language based on C. It intends tries to be a short step up from C rather than to replace it with a new paradigm or completely new syntax. C3 is built on top of the C2 lang project by Bas van den Berg. It goes substantially further in regards to error handling, macros, generics and strings. Although it might have some breaking changes, it can – at least currently – be considered a superset of C2.

githubRepo https://github.com/c3lang/c3docs
 firstCommit 2019
 stars 6
 subscribers 3
 created 2019
 updated 2022
 issues 2
 forks 7
 description Docs for the C3 language

website http://www.c3-lang.org/
reference https://www.reddit.com/r/ProgrammingLanguages/comments/ex7hpp/february_2020_monthly_what_are_you_working_on/fgdpuki/
reference https://news.ycombinator.com/item?id=32005678

lineCommentToken //

example
 module stack <Type>;
 // Above: the parameterized type is applied to the entire module.
 import std::mem;
 
 struct Stack
 {
     usize capacity;
     usize size;
     Type* elems;
 }
 
 // The type methods offers dot syntax calls,
 // so this function can either be called 
 // Stack.push(&my_stack, ...) or
 // my_stack.push(...)
 fn void Stack.push(Stack* this, Type element)
 {
     if (this.capacity == this.size)
     {
         this.capacity *= 2;
         this.elems = mem::realloc(this.elems, $sizeof(Type) * this.capacity);
     }
     this.elems[this.size++] = element;
 }
 
 fn Type Stack.pop(Stack* this)
 {
     assert(this.size > 0);
     return this.elems[--this.size];
 }
 
 fn bool Stack.empty(Stack* this)
 {
     return !this.size;
 }
creators Christoffer Lerno
features
 hasLineComments true
  // A comment
 hasComments true
  // A comment
 hasSemanticIndentation false