title AspectJ
appeared 2001
type pl

wikipedia https://en.wikipedia.org/wiki/AspectJ
 example
  pointcut set() : execution(* set*(..) ) && this(Point);
 related java eclipse-editor emacs-editor isbn
 summary AspectJ is an aspect-oriented programming (AOP) extension created at PARC for the Java programming language. It is available in Eclipse Foundation open-source projects, both stand-alone and integrated into Eclipse. AspectJ has become a widely used de facto standard for AOP by emphasizing simplicity and usability for end users. It uses Java-like syntax, and included IDE integrations for displaying crosscutting structure since its initial public release in 2001.
 pageId 237214
 dailyPageViews 88
 created 2003
 backlinksCount 100
 revisionCount 172
 appeared 2001
 fileExtensions aj

githubLanguage AspectJ
 fileExtensions aj
 trendingProjectsCount 0

linguistGrammarRepo https://github.com/pchaigno/sublime-aspectj
 firstCommit 2015
 lastCommit 2017
 committerCount 2
 commitCount 21
 sampleCount 2
 example
  package com.blogspot.miguelinlas3.aspectj.cache;
  
  import java.util.Map;
  import java.util.WeakHashMap;
  
  import org.aspectj.lang.JoinPoint;
  
  import com.blogspot.miguelinlas3.aspectj.cache.marker.Cachable;
  
  /**
   * This simple aspect simulates the behaviour of a very simple cache
   *  
   * @author migue
   *
   */
  public aspect CacheAspect {
  
  	public pointcut cache(Cachable cachable): execution(@Cachable * * (..)) && @annotation(cachable);
  	
  	Object around(Cachable cachable): cache(cachable){
  	
  		String evaluatedKey = this.evaluateKey(cachable.scriptKey(), thisJoinPoint);
  		
  		if(cache.containsKey(evaluatedKey)){
  			System.out.println("Cache hit for key " + evaluatedKey);
  			return this.cache.get(evaluatedKey);
  		}
  		
  		System.out.println("Cache miss for key " + evaluatedKey);
  		Object value = proceed(cachable);
  		cache.put(evaluatedKey, value);
  		return value;
  	}
  	
  	protected String evaluateKey(String key, JoinPoint joinPoint) {
  		// TODO add some smart staff to allow simple scripting in @Cachable annotation
  		return key;
  	}
  	
  	protected Map<String, Object> cache = new WeakHashMap<String, Object>();
  }
  

website http://www.eclipse.org/aspectj/
status active
fileExtensions aj
fileType text
isOpenSource true

tiobe AspectJ

hopl 7055

quineRelay AspectJ

ubuntuPackage aspectj

rosettaCode AspectJ

antlr https://github.com/antlr/grammars-v4/tree/master/aspectj

centralPackageRepositoryCount 0
rijuRepl https://riju.codes/aspectj
 example
  public class Main {
      public static void main(String[] args) {
          System.out.println("Hello, world!");
      }
  }
  
goodreads
 title|year|author|goodreadsId|rating|ratings|reviews
 Eclipse AspectJ: Aspect-Oriented Programming with AspectJ and the Eclipse AspectJ Development Tools|2004|Adrian Colyer|974936|3.25|8|0
 Aspectj in Action: Practical Aspect-Oriented Programming|2003|Ramnivas Laddad|2052653|3.76|34|2
 Aspect-Oriented Programming with Aspectj|2002|Ivan Kiselev|6484284|3.00|3|0
 Mastering Aspectj: Aspect-Oriented Programming in Java|2003|Joseph D. Gradecki|1944006|3.20|5|1
 Aspect-Oriented Programming with Aspectj|2002|Ivan Kiselev|41635597|0.0|0|0
 Java Programming Language Family: Godiva, Scala, Processing, Aspectj, Groovy, Javafx Script, Einstein, J Sharp, Judoscript, Jasmin, Beanshell|2011|Books LLC|15219374|0.0|0|0
 Logging and Simulation using Aspect Oriented Software: AOP and AspectJ||Mutum Meetei|54120798|0.0|0|0
lineCommentKeyword //
features
 hasLineComments true
  // A comment
 hasComments true
  // A comment
 hasPrintDebugging true
pygmentsHighlighter AspectJ
 filename jvm.py
 fileExtensions aj
leachim6 Aspectj
 filepath a/Aspectj.aj
 fileExtensions aj
 example
  System.out.println("Hello World");
printKeyword System.out.println