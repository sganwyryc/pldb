title EBNF
appeared 1977
type grammarLanguage
creators Niklaus Wirth

wikipedia https://en.wikipedia.org/wiki/Extended_Backus–Naur_form
 example
  function application = list( symbol, { expression } );
 related pascal xml regex
 summary In computer science, extended Backus-Naur form (EBNF) is a family of metasyntax notations, any of which can be used to express a context-free grammar. EBNF is used to make a formal description of a formal language which can be a computer programming language. They are extensions of the basic Backus–Naur form (BNF) metasyntax notation. The earliest EBNF was originally developed by Niklaus Wirth incorporating some of the concepts (with a different syntax and notation) from Wirth syntax notation. However, many variants of EBNF are in use. The International Organization for Standardization has adopted an EBNF standard (ISO/IEC 14977). This article uses EBNF as specified by the ISO for examples applying to all EBNFs. Other EBNF variants use somewhat different syntactic conventions.
 pageId 71289
 dailyPageViews 244
 backlinksCount 50
 appeared 1977

githubLanguage EBNF
 fileExtensions ebnf
 trendingProjectsCount 0

linguistGrammarRepo https://github.com/sanssecours/EBNF.tmbundle
 firstCommit 2012
 lastCommit 2016
 committerCount 2
 commitCount 42
 sampleCount 4
 example
  (*
    Source:  https://github.com/io7m/jsom0
    License: ISC
  *)
  
  digit_without_zero =
    "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
  
  digit =
    "0" | digit_without_zero ;
  
  positive =
    digit_without_zero , { digit } ;
  
  natural =
    "0" | positive ;
  
  real =
    [ "-" ] , digit , [ "." , { digit } ] ;
  
  

standsFor extended Backus-Naur form
status active
fileType text

hopl 755

codeMirror ebnf

centralPackageRepositoryCount 0
dblp https://dblp.org/search?q=$EBNF$
 hits 11
 publications
  title|year|doi|url
  Automatic Acceptor Generation based on EBNF Grammar Definition.|2021|10.1109/ACIT52158.2021.9548492|https://dblp.org/rec/conf/acit4/AdamchukS21
  Lerche: Generating data file processors in Julia from EBNF grammars.|2021|10.21105/JOSS.03497|https://dblp.org/rec/journals/jossw/HesterS21
  GLL syntax analysers for EBNF grammars.|2018|10.1016/J.SCICO.2018.06.001|https://dblp.org/rec/journals/scp/ScottJ18
  Transition from EBNF to Xtext.|2014||https://dblp.org/rec/conf/models/Yue14
  From EBNF to PEG.|2013|10.3233/FI-2013-940|https://dblp.org/rec/journals/fuin/Redziejowski13
  From EBNF to PEG.|2013||https://dblp.org/rec/conf/csp/Redziejowski13
  From EBNF to PEG.|2012||https://dblp.org/rec/conf/csp/Redziejowski12
  An EBNF grammar for Wiki Creole 1.0.|2007|10.1145/1324960.1324964|https://dblp.org/rec/journals/sigweb/JunghansRGKLY07
  Rigorous EBNF-based Definition for a Graphic Modeling Language.|2003|10.1109/APSEC.2003.1254371|https://dblp.org/rec/conf/apsec/XiaG03
  Teaching EBNF first in CS 1.|1994|10.1145/191029.191155|https://dblp.org/rec/conf/sigcse/Pattis94