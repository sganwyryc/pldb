title Verilog
appeared 1984
type hardwareDescriptionLanguage
fileExtensions v
country United States

features
 hasComments true
 hasLineComments true
  // A comment
 hasPrintDebugging true
 hasMultiLineComments true
  /* A comment
  */
 hasSemanticIndentation false
 hasStrings true
  "Hello world"
 isCaseSensitive true
 hasWhileLoops true
 hasFunctions true
 hasConditionals true
 hasOctals true
  // ([0-9]+)|(\'o)[0-7]+
 hasHexadecimals true
  // ([0-9]+)|(\'h)[0-9a-fA-F]+
 hasFloats true
  // (\d+\.\d*|\.\d+|\d+)[eE][+-]?\d+[lL]?
 hasIntegers true
  // ([0-9]+)|(\'d)[0-9]+
 hasBinaryNumbers true
  // ([0-9]+)|(\'b)[01]+

lineCommentToken //
multiLineCommentTokens /* */
printToken $display
stringToken "
keywords always assign automatic begin case casex casez cell config deassign default defparam design disable edge else end endcase endconfig endfunction endgenerate endmodule endprimitive endspecify endtable endtask event for force forever fork function generate genvar if ifnone incdir include initial inout input instance join liblist library localparam macromodule module negedge noshowcancelled output parameter posedge primitive pulsestyle_ondetect pulsestyle_onevent reg release repeat scalared showcancelled signed specify specparam strength table task tri tri0 tri1 triand wand trior wor trireg unsigned use vectored wait while wire

wikipedia https://en.wikipedia.org/wiki/Verilog
 example
  initial
    a = 0;
  
  initial
    b = a;
  
  initial
    begin
      #1;
      $display("Value a=%d Value of b=%d",a,b);
    end
 related systemverilog c vhdl openvera property-specification-language
 summary Verilog, standardized as IEEE 1364, is a hardware description language (HDL) used to model electronic systems. It is most commonly used in the design and verification of digital circuits at the register-transfer level of abstraction. It is also used in the verification of analog circuits and mixed-signal circuits, as well as in the design of genetic circuits.
 pageId 63863
 dailyPageViews 497
 created 2002
 backlinksCount 515
 revisionCount 738
 appeared 1984
 fileExtensions v

githubLanguage Verilog
 fileExtensions v veo
 trendingProjects
  author name avatar url language languageColor stars forks currentPeriodStars description
  SI-RISCV e200_opensource https://github.com/SI-RISCV.png https://github.com/SI-RISCV/e200_opensource Verilog #b2b7f8 899 409 57 "The Ultra-Low Power RISC Core"
  cliffordwolf picorv32 https://github.com/cliffordwolf.png https://github.com/cliffordwolf/picorv32 Verilog #b2b7f8 966 254 29 "PicoRV32 - A Size-Optimized RISC-V CPU"
 trendingProjectsCount 3

antlr https://github.com/antlr/grammars-v4/tree/master/verilog
codeMirror verilog
pygmentsHighlighter verilog
 filename hdl.py
 fileExtensions v
linguistGrammarRepo https://github.com/textmate/verilog.tmbundle
 firstCommit 2008
 lastCommit 2015
 committerCount 3
 commitCount 16
 sampleCount 13
 example
  `timescale 1ns / 1ps
  // Copyright (C) 2008 Schuyler Eldridge, Boston University
  //
  // This program is free software: you can redistribute it and/or modify
  // it under the terms of the GNU General Public License as published by
  // the Free Software Foundation, either version 3 of the License.
  //
  // This program is distributed in the hope that it will be useful,
  // but WITHOUT ANY WARRANTY; without even the implied warranty of
  // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  // GNU General Public License for more details.
  //
  // You should have received a copy of the GNU General Public License
  // along with this program.  If not, see <http://www.gnu.org/licenses/>.
  module mux(opA,opB,sum,dsp_sel,out);
  	input [3:0] opA,opB;
  	input [4:0] sum;
  	input [1:0] dsp_sel;
  	output [3:0] out;
  	
  	reg cout;
  	
  	always @ (sum)
  		begin
  			if (sum[4] == 1)
  				cout <= 4'b0001;
  			else
  				cout <= 4'b0000;
  		end
  	
  	reg out;
  	
  	always @(dsp_sel,sum,cout,opB,opA)
  		begin
  			if (dsp_sel == 2'b00)
  				out <= sum[3:0];
  			else if (dsp_sel == 2'b01)
  				out <= cout;
  			else if (dsp_sel == 2'b10)
  				out <= opB;
  			else if (dsp_sel == 2'b11)
  				out <= opA;
  		end
  
  endmodule
  

helloWorldCollection Verilog
 /* Hello World in Verilog. */
 
 module main;
 
  initial
    begin
      $display("Hello, World");
      $finish ;
    end
 
  endmodule
 
leachim6 Verilog
 filepath v/Verilog.v
 fileExtensions v
 example
  module main;
    initial
      begin
        $display("Hello World");
        $finish;
      end
  endmodule
  
rosettaCode Verilog
quineRelay Verilog

rijuRepl https://riju.codes/verilog
 example
  module main;
  
  initial begin
    $display("Hello, world!");
  end
  
  endmodule
  

subreddit Verilog
 memberCount
  2017 552
  2022 2421

tiobe Verilog
 currentRank 50
hopl 1062

ubuntuPackage iverilog
fileType text
centralPackageRepositoryCount 0

goodreads
 title|year|author|goodreadsId|rating|ratings|reviews
 HDL Programming Fundamentals: VHDL and Verilog [With CD-ROM]|2005|Nazeih M. Botros|382542|4.15|55|5
 Programming Fpgas: Getting Started with Verilog||Simon Monk|50000071|3.89|9|2
 Computer Arithmetic And Verilog Hdl Fundamentals|2009|Joseph Cavanagh|7046981|4.70|10|1

isbndb 31
 year|publisher|title|authors|isbn13
 2016|McGraw Hill TAB|Programming FPGAs: Getting Started with Verilog|Monk, Simon|9781259643767
 2019|Pearson|Verilog Styles for Synthesis of Digital Systems|Smith, David R and Franzon, Paul D|9780201618600
 2007|CRC Press|Verilog HDL: Digital Design and Modeling|Cavanagh, Joseph|9781420051544
 1998|Springer|The Complete Verilog Book|Sagdeo, Vivek|9780792381884
 2005|Charles River Media|HDL Programming Fundamentals: VHDL and Verilog (DaVinci Engineering)|Botros, Nazeih M|9781584508557
 2007|Cambridge University Press|Designing Digital Computer Systems with Verilog|Lilja, David J. and Sapatnekar, Sachin S.|9780521045728
 20130418|Springer Nature|The Verilog PLI Handbook|Stuart Sutherland|9781461550174
 2016|McGraw Hill TAB|Programming FPGAs: Getting Started with Verilog|Monk, Simon|9781259643774
 2017|McGraw-Hill Education|Digital System Design with FPGA: Implementation Using Verilog and VHDL|Unsalan, Cem and Tar, Bora|9781259837913
 1996|Prentice Hall PTR|Verilog HDL|Palnitkar, Samir|9780134516752
 2019|Wiley|Digital Logic: With an Introduction to Verilog and FPGA-Based Design|Rafiquzzaman, M. and McNinch,  Steven A.|9781119621546
 2019|Wiley|Digital Logic: With an Introduction to Verilog and FPGA-Based Design|Rafiquzzaman, M. and McNinch, Steven A.|9781119621638
 1998|Pearson College Div|Verilog Digital Computer Design: Algorithms into Hardware|Arnold, Mark Gordon|9780136392538
 1999|Star Galaxy Pub|A Verilog HDL Primer, Second Edition|Bhasker, J.|9780965039178
 2002|Springer|The Verilog PLI Handbook: A User’s Guide and Comprehensive Reference on the Verilog Programming Language Interface (The Springer International Series in Engineering and Computer Science (666))|Sutherland, Stuart|9780792376583
 1999|Springer|Principles of Verilog PLI|Mittra, Swapnajit|9780792384779
 1999|Springer|The Verilog PLI Handbook: A User's Guide and Comprehensive Reference on the Verilog Programming Language Interface|Sutherland, Stuart|9780792384892
 2013-04-18T00:00:01Z|Springer|The Verilog PLI Handbook: A User’s Guide and Comprehensive Reference on the Verilog Programming Language Interface (The Springer International Series in Engineering and Computer Science (666))|Sutherland, Stuart|9781475783711
 2012|Springer|The Verilog PLI Handbook: A User’s Guide and Comprehensive Reference on the Verilog Programming Language Interface|Sutherland, Stuart|9781461372790
 2015|LAP LAMBERT Academic Publishing|Dual Core RISC Processor with configurable hardware using VERILOG|Kumar, Nishant and Aggrawal, Ekta|9783659417887
 2014|GRIN Publishing|Verilog Design of a Pedestrian Crossing: Verilog Programming|Gondhalekar, Ninad|9783656845027
 2012|LAP LAMBERT Academic Publishing|A HDL & Verilog Code: Simulated Output|Sudhan, Manu and S., Manjunatha|9783848423248
 2011-10-08T00:00:01Z|Springer|The Verilog PLI Handbook: A User's Guide and Comprehensive Reference on the Verilog Programming Language Interface|Sutherland, Stuart|9781461550181
 2021|Cengage Learning|HDL Programming Fundamentals: VHDL and Verilog (Davinci Engineering)|Botros|9788131502013
 1999|Pearson Education|Verilog Designer's Library|Bob Zeidman|9780132441582
 20060418|Springer Nature|The Verilog PLI Handbook|Stuart Sutherland|9780306476655
 20121206|Springer Nature|Principles of Verilog PLI|Swapnajit Mittra|9781461551614
 2011-09-20|Wiley|FPGA Prototyping by Verilog Examples|Pong P. Chu|9781118210611
 03/2015|Mercury Learning and Information|HDL with Digital Design VHDL and Verilog|Nazeih Botros|9781942270287
 2021-12-10|Wiley|Digital VLSI Design and Simulation with Verilog|Suman Lata Tripathi and Sobhit Saxena and Sanjeet K. Sinha and Govind S. Patel|9781119778066
 2005|McGraw-Hill Professional Publishing|Verilog Digital System Design: RT Level Synthesis, Testbench and Verification|Zainalabedin Navabi|9780071445658