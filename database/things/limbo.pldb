title Limbo
appeared 1995
type pl
creators Rob Pike

wikipedia https://en.wikipedia.org/wiki/Limbo_(programming_language)
 example
  implement Command;
   
   include "sys.m";
       sys: Sys;
   
  
   
   init(Context, nil: list of string)
   {
       sys = load Sys Sys->PATH;
       print("Hello World!\n");
   }
 related c pascal csp alef newsqueak stackless-python go rust ada isbn
 summary Limbo is a programming language for writing distributed systems and is the language used to write applications for the Inferno operating system. It was designed at Bell Labs by Sean Dorward, Phil Winterbottom, and Rob Pike. The Limbo compiler generates architecture-independent object code which is then interpreted by the Dis virtual machine or compiled just before runtime to improve performance. Therefore all Limbo applications are completely portable across all Inferno platforms. Limbo's approach to concurrency was inspired by Hoare's communicating sequential processes (CSP), as implemented and amended in Pike's earlier Newsqueak language and Winterbottom's Alef.
 pageId 236298
 dailyPageViews 73
 created 2003
 backlinksCount 119
 revisionCount 138
 appeared 1995

githubLanguage Limbo
 fileExtensions b m
 trendingProjectsCount 0

helloWorldCollection Limbo
 Hello World in Limbo.
 Limbo is the programming language of the Inferno OS
 (from Lucent Bell Labs).
 
 
 implement Cmd;
 
 include "sys.m";
 include "draw.m";
 
 Cmd : module {
     init : fn (ctxt : ref Draw->Context, args : list of string);
 };
 
 init(nil : ref Draw->Context, nil : list of string)
 {
     sys := load Sys Sys->PATH;
     sys->print("Hello World\n");
 }

example
 Lock: module
 {
 	PATH:	con "/dis/lib/lock.dis";
 
 	Semaphore: adt {
 		c: chan of int;
 		obtain:	fn(nil: self ref Semaphore);
 		release: fn(nil: self ref Semaphore);
 		new: fn(): ref Semaphore;
 	};
 	
 	init: fn();
 };

website http://www.vitanuova.com/inferno/limbo.html
status active
country US
fileType text
isOpenSource true

tiobe Limbo

hopl 2166

rosettaCode Limbo

centralPackageRepositoryCount 0
rijuRepl https://riju.codes/limbo
 example
  implement Cmd;
  
  include "sys.m";
  include "draw.m";
  
  Cmd : module {
      init : fn (ctxt : ref Draw->Context, args : list of string);
  };
  
  init(nil : ref Draw->Context, nil : list of string)
  {
      sys := load Sys Sys->PATH;
      sys->print("Hello, world!\n");
  }
  
dblp https://dblp.org/search?q=$Limbo$
 hits 21
 publications
  title|year|doi|url
  Limbo: Efficient Zero-knowledge MPCitH-based Arguments.|2021|10.1145/3460120.3484595|https://dblp.org/rec/conf/ccs/GuilhemOT21
  Limbo: Efficient Zero-knowledge MPCitH-based Arguments.|2021||https://dblp.org/rec/journals/iacr/GuilhemOT21
  Stuck in Limbo with Magical Solutions: The Testers&apos; Lived Experiences of Tools and Automation.|2020|10.5220/0009091801950202|https://dblp.org/rec/conf/grapp/EvansPMH20
  Dynamic Mini-batch SGD for Elastic Distributed Training: Learning in the Limbo of Resources.|2019||https://dblp.org/rec/journals/corr/abs-1904-12043
  In Limbo: The Effect of Gradual Visual Transition Between Real and Virtual on Virtual Body Ownership Illusion and Presence.|2018|10.1109/VR.2018.8447562|https://dblp.org/rec/conf/vr/JungWH18
  Limbo: A Flexible High-performance Library for Gaussian Processes modeling and Data-Efficient Optimization.|2018|10.21105/JOSS.00545|https://dblp.org/rec/journals/jossw/CullyCAM18
  Forensic limbo: Towards subverting hard disk firmware bootkits.|2017|10.1016/J.DIIN.2017.10.003|https://dblp.org/rec/journals/di/Gruhn17
  Limbo: A Reasoning System for Limited Belief.|2017|10.24963/IJCAI.2017/779|https://dblp.org/rec/conf/ijcai/Schwering17a
  Limbo: A Fast and Flexible Library for Bayesian Optimization.|2016||https://dblp.org/rec/journals/corr/CullyCAM16
  Knowledge sharing in project-based organizations: Overcoming the informational limbo.|2014|10.1016/J.IJINFOMGT.2014.07.003|https://dblp.org/rec/journals/ijinfoman/AlmeidaS14