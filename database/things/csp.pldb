title CSP
appeared 1978
type pl

example
 COPY = *[c:character; west?c → east!c]

wikipedia https://en.wikipedia.org/wiki/Communicating_sequential_processes
 related occam limbo go crystal clojure ada
 summary In computer science, communicating sequential processes (CSP) is a formal language for describing patterns of interaction in concurrent systems. It is a member of the family of mathematical theories of concurrency known as process algebras, or process calculi, based on message passing via channels. CSP was highly influential in the design of the occam programming language, and also influenced the design of programming languages such as Limbo, RaftLib, Go, Crystal, and Clojure's core.async. CSP was first described in a 1978 paper by Tony Hoare, but has since evolved substantially. CSP has been practically applied in industry as a tool for specifying and verifying the concurrent aspects of a variety of different systems, such as the T9000 Transputer, as well as a secure ecommerce system. The theory of CSP itself is also still the subject of active research, including work to increase its range of practical applicability (e.g., increasing the scale of the systems that can be tractably analyzed).
 pageId 247370
 created 2003
 backlinksCount 133
 revisionCount 456
 dailyPageViews 281
 appeared 2002

standsFor Communicating Sequential Processes
status historical
country GB
fileType text

hopl 795

centralPackageRepositoryCount 0
goodreads
 title|year|author|goodreadsId|rating|ratings|reviews
 Csp: A Developer's Guide|1992|Shashi Malik|5518824|0.0|0|0
 CSP as a Coordination Language||Kleine Moritz|51931033|0.0|0|0
dblp https://dblp.org/search?q=$CSP$
 hits 886
 publications
  title|year|doi|url
  Résolution des problèmes (W)CSP et #CSP par approches structurelles: Calcul et exploitation dynamique de décompositions arborescentes. (Solving (W)CSP and #CSP problems by structural approaches: computation and dynamic exploitation of tree decompositions).|2017||https://dblp.org/rec/phd/hal/Kanso17
  Reliability evaluation of ultra-thin CSP using new flip-chip bonding technology--double-sided CSP and single-sided CSP.|2003|10.1016/S0026-2714(03)00166-5|https://dblp.org/rec/journals/mr/NishidaSYKT03
  Wind-Thermal-CSP Bundling Model With an Adjustable Heat Storage Strategy for CSP Stations.|2021|10.1109/ACCESS.2021.3057445|https://dblp.org/rec/journals/access/LiWLNLSHHX21
  2021 International Conference on Artificial Intelligence for Cyber Security Systems and Privacy (AI-CSP), El Oued, Algeria, November 20-21, 2021|2021|10.1109/AI-CSP52968.2021|https://dblp.org/rec/conf/aicsp/2021
  5th IEEE International Conference on Cryptography, Security and Privacy, CSP 2021, Zhuhai, China, January 8-10, 2021|2021|10.1109/CSP51677.2021|https://dblp.org/rec/conf/iccsp/2021
  Environmental Assessment of a HYSOL CSP Plant Compared to a Conventional Tower CSP Plant.|2016|10.1016/J.PROCS.2016.04.231|https://dblp.org/rec/conf/ant/CoronaRM16
  CSP Is Dead, Long Live CSP! On the Insecurity of Whitelists and the Future of Content Security Policy.|2016|10.1145/2976749.2978363|https://dblp.org/rec/conf/ccs/WeichselbaumSLJ16
  Combinaison des techniques de Bounded Model Checking et de programmation par contraintes pour l&apos;aide à la localisation d&apos;erreurs : exploration des capacités des CSP pour la localisation d&apos;erreurs. (Combining techniques of Bounded Model Checking and constraint programming to aid for error localization : exploration of CSP capacities for error localization).|2015||https://dblp.org/rec/phd/hal/Bekkouche15
  基于Petri网的CSP并发系统验证技术研究 (Verification of Concurrent CSP Systems Based on Petri Net).|2015||https://dblp.org/rec/journals/jsjkx/LiuZQ15
  E-CARGO模型在CSP问题中的描述 (Constrainted E-CARGO Model Applying in CSP Problem).|2015|10.11896/J.ISSN.1002-137X.2015.02.050|https://dblp.org/rec/journals/jsjkx/TengZLZ0L18