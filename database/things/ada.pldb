title Ada
appeared 1980
type pl
creators Jean Ichbiah
website http://www.adaic.org
fileExtensions adb ads
country United States
domainName adaic.org
 registered 1998
 awisRank
  2022 1556974

visualParadigm false

features
 hasPointers true
 hasGenerics true
  generic
     Max_Size : Natural; -- a generic formal value
     type Element_Type is private; -- a generic formal type; accepts any nonlimited type
  package Stacks is
     type Size_Type is range 0 .. Max_Size;
     type Stack is limited private;
     procedure Create (S : out Stack;
                       Initial_Size : in Size_Type := Max_Size);
     procedure Push (Into : in out Stack; Element : in Element_Type);
     procedure Pop (From : in out Stack; Element : out Element_Type);
     Overflow : exception;
     Underflow : exception;
  private
     subtype Index_Type is Size_Type range 1 .. Max_Size;
     type Vector is array (Index_Type range <>) of Element_Type;
     type Stack (Allocated_Size : Size_Type := 0) is record
        Top : Index_Type;
        Storage : Vector (1 .. Allocated_Size);
     end record;
  end Stacks;
 hasComments true
 hasDirectives true
 hasCaseInsensitiveIdentifiers true
 hasOperatorOverloading true
 hasMultiLineComments false
 hasLineComments true
  -- A comment
 hasPrintDebugging true
 hasSemanticIndentation false
 hasAssignment true
 hasStrings true
  "Hello world"
 isCaseSensitive false
 hasBooleans true
 hasWhileLoops true
 hasFunctions true
 hasConditionals true
 hasHexadecimals true
  -- [0-9_]+#[0-9a-f_\.]+#
 hasFloats true
  -- [0-9_]+\.[0-9_]*
 hasIntegers true
  -- [0-9_]+

lineCommentToken --
printToken Text_IO.Put_Line
assignmentToken :=
stringToken "
booleanTokens True False
keywords abort else new return abs elsif not reverse abstract end null accept entry select access exception of separate aliased exit or some all others subtype and for out synchronized array function overriding at tagged generic package task begin goto pragma terminate body private then if procedure type case in protected constant interface until is raise use declare range delay limited record when delta loop rem while digits renames with do mod requeue xor

wikipedia https://en.wikipedia.org/wiki/Ada_(programming_language)
 example
  with Ada.Text_IO; use Ada.Text_IO;
  
  procedure Traffic is
  
     type Airplane_ID is range 1..10;             -- 10 airplanes
  
     task type Airplane (ID: Airplane_ID);        -- task representing airplanes, with ID as initialisation parameter
     type Airplane_Access is access Airplane;     -- reference type to Airplane
  
     protected type Runway is                     -- the shared runway (protected to allow concurrent access)
        entry Assign_Aircraft (ID: Airplane_ID);  -- all entries are guaranteed mutually exclusive
        entry Cleared_Runway (ID: Airplane_ID);
        entry Wait_For_Clear;
     private
        Clear: Boolean := True;                   -- protected private data - generally more than just a flag...
     end Runway;
     type Runway_Access is access all Runway;
  
     -- the air traffic controller task takes requests for takeoff and landing
     task type Controller (My_Runway: Runway_Access) is
        -- task entries for synchronous message passing
        entry Request_Takeoff (ID: in Airplane_ID; Takeoff: out Runway_Access);
        entry Request_Approach(ID: in Airplane_ID; Approach: out Runway_Access);
     end Controller;
  
     --  allocation of instances
     Runway1    : aliased Runway;              -- instantiate a runway
     Controller1: Controller (Runway1'Access); -- and a controller to manage it
  
     ------ the implementations of the above types ------
     protected body Runway is
        entry Assign_Aircraft (ID: Airplane_ID)
   when Clear is   -- the entry guard - calling tasks are blocked until the condition is true
        begin
         Clear := False;
         Put_Line (Airplane_ID'Image (ID) & " on runway ");
        end;
  
        entry Cleared_Runway (ID: Airplane_ID)
   when not Clear is
        begin
           Clear := True;
           Put_Line (Airplane_ID'Image (ID) & " cleared runway ");
        end;
  
        entry Wait_For_Clear
   when Clear is
        begin
           null;      -- no need to do anything here - a task can only enter if "Clear" is true
        end;
     end Runway;
  
     task body Controller is
     begin
        loop
           My_Runway.Wait_For_Clear;   -- wait until runway is available (blocking call)
           select                      -- wait for two types of requests (whichever is runnable first)
              when Request_Approach'count = 0 =>  -- guard statement - only accept if there are no tasks queuing on Request_Approach
               accept Request_Takeoff (ID: in Airplane_ID; Takeoff: out Runway_Access)
               do                                 -- start of synchronized part
                 My_Runway.Assign_Aircraft (ID);  -- reserve runway (potentially blocking call if protected object busy or entry guard false)
                 Takeoff := My_Runway;            -- assign "out" parameter value to tell airplane which runway
               end Request_Takeoff;               -- end of the synchronised part
           or
              accept Request_Approach (ID: in Airplane_ID; Approach: out Runway_Access) do
                 My_Runway.Assign_Aircraft (ID);
                 Approach := My_Runway;
              end Request_Approach;
           or                          -- terminate if no tasks left who could call
              terminate;
           end select;
        end loop;
     end;
  
     task body Airplane is
        Rwy : Runway_Access;
     begin
        Controller1.Request_Takeoff (ID, Rwy); -- This call blocks until Controller task accepts and completes the accept block
        Put_Line (Airplane_ID'Image (ID) & "  taking off...");
        delay 2.0;
        Rwy.Cleared_Runway (ID);               -- call will not block as "Clear" in Rwy is now false and no other tasks should be inside protected object
        delay 5.0; -- fly around a bit...
        loop
           select   -- try to request a runway
              Controller1.Request_Approach (ID, Rwy); -- this is a blocking call - will run on controller reaching accept block and return on completion
              exit; -- if call returned we're clear for landing - leave select block and proceed...
           or
              delay 3.0;  -- timeout - if no answer in 3 seconds, do something else (everything in following block)
              Put_Line (Airplane_ID'Image (ID) & "   in holding pattern");  -- simply print a message
           end select;
        end loop;
        delay 4.0;  -- do landing approach...
        Put_Line (Airplane_ID'Image (ID) & "            touched down!");
        Rwy.Cleared_Runway (ID);  -- notify runway that we're done here.
     end;
  
     New_Airplane: Airplane_Access;
  
  begin
     for I in Airplane_ID'Range loop  -- create a few airplane tasks
        New_Airplane := new Airplane (I); -- will start running directly after creation
        delay 4.0;
     end loop;
  end Traffic;
 related spark ravenscar-profile algol-68 pascal smalltalk java eiffel chapel nim pl-sql plpgsql ruby rust seed7 sql-psm vhdl unicode lisp setl algol algol-60 apse
 summary Ada is a structured, statically typed, imperative, wide-spectrum, and object-oriented high-level computer programming language, extended from Pascal and other languages. It has built-in language support for design-by-contract, extremely strong typing, explicit concurrency, offering tasks, synchronous message passing, protected objects, and non-determinism. Ada improves code safety and maintainability by using the compiler to find errors in favor of runtime errors. Ada is an international standard; the current version (known as Ada 2012) is defined by ISO/IEC 8652:2012. Ada was originally designed by a team led by Jean Ichbiah of CII Honeywell Bull under contract to the United States Department of Defense (DoD) from 1977 to 1983 to supersede over 450 programming languages used by the DoD at that time. Ada was named after Ada Lovelace (1815â€“1852), who has been credited with being the first computer programmer.
 pageId 1242
 dailyPageViews 768
 created 2001
 backlinksCount 744
 revisionCount 1280
 appeared 1980
 fileExtensions adb ads

githubLanguage Ada
 fileExtensions adb ada ads
 trendingProjectsCount 0

pygmentsHighlighter Ada
 filename ada.py
 fileExtensions adb ads ada
linguistGrammarRepo https://github.com/textmate/ada.tmbundle
 firstCommit 2005
 lastCommit 2015
 committerCount 4
 commitCount 44

projectEuler Ada
 memberCount
  2019 120
  2022 129
helloWorldCollection Ada
 -- Hello World in Ada
 
 with Text_IO;
 procedure Hello_World is
 
 begin
   Text_IO.Put_Line("Hello World!");
 end Hello_World;
 
leachim6 Ada
 filepath a/Ada.adb
 fileExtensions adb
 example
  with Ada.Text_IO;
  
  procedure Hello_World is
     use Ada.Text_IO;
  begin
     Put_line ("Hello World");
  end Hello_World;
  
rosettaCode Ada
quineRelay Ada

rijuRepl https://riju.codes/ada
 example
  with Ada.Text_IO;
  
  procedure Main is
  begin
     Ada.Text_IO.Put_Line("Hello, world!");
  end Main;
  
 description Structured, statically typed, imperative, and object-oriented high-level programming language, extended from Pascal and other languages
 fileExtensions adb ads
 website https://www.adaic.org/
 githubRepo https://gcc.gnu.org/git.html

subreddit ada
 memberCount
  2017 1092
  2022 8055

tiobe Ada
 currentRank 28
hopl 840

ubuntuPackage gnat
gdbSupport true
fileType text
wordRank 8040
centralPackageRepositoryCount 0

isbndb 64
 year|publisher|title|authors|isbn13
 2014|Cambridge University Press|Programming in Ada 2012|Barnes, John|9781107424814
 1999|Addison-Wesley|Ada 95: Problem Solving and Program Design (3rd Edition)|Feldman, Michael B. and Koffman, Elliot B.|9780201361230
 1986|Archon Books|The Calculating Passion of Ada Byron|Baum, Joan|9780208021199
 2006|Pearson|Programming in Ada 2005 with CD|Barnes, John|9780321340788
 1987|Tab Books|Power Programming With Ada For The Ibm Pc|Winters and John W.|9780830679027
 1984|Cambridge University Press|Ada For Multi-microprocessors (the Ada Companion Series)|M. Tedd|9780521301039
 1995|John Wiley &Sons|Rendezvous with ADA 95 2e|J. Naiditch, David|9780471012764
 2019|Candlewick|Dreaming in Code: Ada Byron Lovelace, Computer Pioneer|McCully, Emily Arnold|9780763693565
 1993|Addison-Wesley|Programming in Ada: Plus an Overview of Ada 9X (International computer science series)|Barnes, J. G. P.|9780201624076
 1986|Allyn And Bacon|Ada Programming With Applications|Eugen N Vasilescu|9780205087440
 1991|Silicon Press|Ada|Gehani, Narain|9780929306087
 1998|Dissertation.Com.|Distributed Programming in ADA with Protected Objects|Ledru, Pascal|9781581120349
 2015|Lulu.com|Ada Programming Success In A Day|Sam Key|9781329461680
 2002|Springer|Consolidated Ada reference manual: language and standard libraries : international standard ISO/IEC 8652/1995(E) with technical corrigendum 1|N/a|9783540430384
 1994|Jones And Bartlett Publishers, Inc|Programming And Problem Solving With Ada|Nell Dale and Et Al|9780669294279
 20030806|Springer Nature|Consolidated Ada Reference Manual|Erhard Ploedereder; S. Tucker Taft; Randall L. Brukardt|9783540453406
 2019|Apress|Beginning Ada Programming: From Novice to Professional|Shvets, Andrew T.|9781484254271
 2019|Apress|Beginning Ada Programming: From Novice to Professional|Shvets, Andrew T.|9781484254288
 20140114|Springer Nature|Ada 2012 Reference Manual. Language and Standard Libraries|L. Loh|9783642454196
 2019|Simon & Schuster Books for Young Readers|Ada Lace and the Suspicious Artist (5) (An Ada Lace Adventure)|Calandrelli, Emily|9781534416888
 2018|CreateSpace Independent Publishing Platform|Introduction to Ada Programming, 2nd Edition|Shvets, Andrew T.|9781987673852
 2018|Bodleian Library, University of Oxford|Ada Lovelace: The Making of a Computer Scientist|Hollings, Christopher and Martin, Ursula and Rice, Adrian|9781851244881
 2022|Cambridge University Press|Programming in Ada 2012 with a Preview of Ada 2022|Barnes, John|9781009181341
 1998|Addison-Wesley Professional|Programming in Ada 95 (2nd Edition) (International Computer Science Series)|Barnes, John|9780201342932
 1990|Addison-Wesley|Ada Programmer's Handbook and Language Reference Manual|Gonzalez, Dean W.|9780805325287
 1997|Addison-Wesley|Ada 95 for C and C ++ Programmers (International Computer Science Series)|Johnston, Simon|9780201403633
 2001-04-05T00:00:01Z|Addison Wesley|Real Time Systems and Programming Languages: Ada 95, Real-Time Java and Real-Time C/POSIX (3rd Edition)|Burns, Alan and Wellings, Andy|9780201729887
 2016|LernerClassroom|Programming Pioneer Ada Lovelace (STEM Trailblazer Bios)|Bodden, Valerie|9781512413038
 2007|Cambridge University Press|Concurrent and Real-Time Programming in Ada|Burns, Alan and Wellings, Andy|9780521866972
 2000|Jones & Bartlett Learning|Programming and Problem Solving with Ada 95|Nell B. Dale and Chip Weems and John W. McCormick|9780792376767
 2000|Jones & Bartlett Learning|Programming and Problem Solving with Ada 95|Nell B. Dale and Chip Weems and John W. McCormick|9780763707927
 2011-05-16T00:00:01Z|Cambridge University Press|Building Parallel, Embedded, and Real-Time Applications with Ada|McCormick, John W. and Singhoff, Frank and Hugues, JÃ©rÃ´me|9780521197168
 1995|Pearson Education|Programming in Ada 95 (International Computer Science Series)|Barnes, John|9780201877007
 1984T|Addison-Wesley|Programming in ADA (International computer science series)|Barnes, J. G. P|9780201137996
 1996|Addison-Wesley|Software Construction and Data Structures with Ada 95 (2nd Edition)|Feldman, Michael B.|9780201887952
 1996-10-24T00:00:01Z|Prentice Hall|Ada 95: The Craft of Object-Oriented Programming|English, John|9780132303507
 2015|CreateSpace Independent Publishing Platform|ADA Programming Success In A Day: Beginnerâ€™s guide to fast, easy and efficient learning of ADA programming|Key, Sam|9781515371328
 1989T|Addison-Wesley|Programming in ADA (International computer science series)|Barnes, J. G. P|9780201175660
 1990|Prentice Hall|Introduction to Programming Using Ada|Volper, Dennis and Katz, Martin D.|9780134935294
 1983|Horizon Pubs & Distributors Inc|Programming in ADA|Sincovec, Richard F. and Wiener, Richard|9780471870890
 1990|Benjamin-Cummings Pub Co|File Structures With Ada (Benjamin Cummings Series in Computer Science)|Miller, Nancy E. and Petersen, Charles G.|9780805304404
 1981|Prentice Hall International|The Ada programming language: A guide for programmers|Pyle, I. C|9780130039217
 2018|Abdo Publishing|Computer Programming: From ADA Lovelace to Mark Zuckerberg (Stem Stories)|Doudna, Kelly|9781532115455
 1997|Springer|Ada 95 Rationale: The Language - The Standard Libraries (Lecture Notes in Computer Science, 1247)||9783540631439
 2013|Springer|Ada 2012 Rationale: The Language -- The Standard Libraries (Lecture Notes in Computer Science (8338))|Barnes, John|9783642452093
 1983|Prentice Hall|The Programming Languages: Pascal, Modula, Chill and Ada|Smedema, Kees|9780137297566
 1991|Addison-Wesley|Programming in Ada Plus Language Reference Manual (International Computer Science Series)|Barnes|9780201565393
 1991|Cambridge University Press|Rationale for the Design of the Ada Programming Language (The Ada Companion Series)|Ichbiah, J.|9780521392679
 2021|Wiley-ISTE|Concepts and Semantics of Programming Languages 2: Modular and Object-oriented Constructs with OCaml, Python, C++, Ada and Java|Hardin, Therese and Jaume, Mathieu and Pessaux, FrancÌ§ois and Viguie Donzeau-Gouge, Veronique|9781786306029
 1993-03-01T00:00:01Z|Chapman & Hall|Introduction to Ada|Cooling, J. E. and Cooling, N.|9780412448102
 1996|Springer|Reliable Software Technologies - Ada Europe 96: 1996 Ada-Europe International Conference on Reliable Software Technologies, Montreux, Switzerland, ... (Lecture Notes in Computer Science, 1088)||9783540613176
 1982|Prentice Hall|Programming Embedded Systems With Ada|Downes, Valerie A.|9780137300105
 1984T|Prentice-Hall|Ada, an advanced introduction: Including reference manual for the Ada programming language (Prentice-Hall software series)|Gehani, Narain|9780130039972
 1996|McGraw-Hill College|Ada Minimanual to Accompany Programming Languages|Benjamin|9780070053182
 1982|John Wiley & Sons|Problem Solving with ADA (Wiley Medical Publication)|Mayoh, B. H.|9780471100256
 1991-11-01|McGraw Hill Higher Education|Programming Languages: Paradigm and Practice: Ada Mini-Manual|Appleby|9780070025783
 1990|Cambridge University Press|Distributed Ada: Developments and Experiences: Proceedings of the Distributed Ada '89 Symposium, University of Southampton, 11â€“12 December 1989|Bishop, Judy M.|9780521392518
 1990|Springer|Programming with Specifications: An Introduction to ANNA, A Language for Specifying Ada Programs (Monographs in Computer Science)|Luckham, David|9780387972541
 1996|Jones & Bartlett Learning|Programming and Problem Solving With Ada|Nell B. Dale and Chip Weems and John W. McCormick|9780763702939
 1993|Prentice Hall|Introduction to Abstract Data Types Using Ada|Hillam, Bruce|9780130459497
 1983|Castle House Publications Ltd|Reference Manual for the ADA Programming Language|Ichbiah, Jean D. & etc.|9780719400971
 2011|Cambridge University Press|Building Parallel, Embedded, And Real-time Applications With Ada|John W. McCormick and Frank Singhoff and JÃ©rÃ´me Hugues|9781139500005
 2010||Ada Programming Language: Ada|Books and LLC|9781156382783
 1988|Eyrolles|Ada|Narain Gehani|9782212084214