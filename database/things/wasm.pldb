title WebAssembly
appeared 2015
type bytecode

example
 20 00
 50
 04 7E
 42 01
 05
 20 00
 20 00
 42 01
 7D
 10 00
 7E
 0B

wikipedia https://en.wikipedia.org/wiki/WebAssembly
 example
  (module
    (import "math" "exp" (func $exp (param f64) (result f64)))
    (func (export "doubleExp") (param $0 f64) (result f64)
      (f64.mul
        (call $exp
          (get_local $0))
        (f64.const 2))))
 related asmjs assembly-language javascript unity-engine llvmir c rust java csharp go s-expressions doi
 summary WebAssembly (Wasm, WA) is a web standard that defines a binary format and a corresponding assembly-like text format for executable code in Web pages. It is meant to enable executing code nearly as fast as running native machine code. It was envisioned to complement JavaScript to speed up performance-critical parts of web applications and later on to enable web development in languages other than JavaScript. WebAssembly does not attempt to replace JavaScript, but to complement it. It is developed at the World Wide Web Consortium (W3C) with engineers from Mozilla, Microsoft, Google and Apple.It is executed in a sandbox in the web browser after a verification step. Programs can be compiled from high-level languages into Wasm modules and loaded as libraries from within JavaScript applets.
 pageId 47013794
 dailyPageViews 392
 created 2015
 backlinksCount 269
 revisionCount 215
 appeared 2017
 fileExtensions wat wasm

githubLanguage WebAssembly
 fileExtensions wast wat
 trendingProjects
  author name avatar url language languageColor stars forks currentPeriodStars description
  AssemblyScript assemblyscript https://github.com/AssemblyScript.png https://github.com/AssemblyScript/assemblyscript WebAssembly #04133b 6742 263 287 "Definitely not a TypeScript to WebAssembly compiler ðŸš€"
 trendingProjectsCount 2

githubRepo https://github.com/WebAssembly/wabt
 stars 4534
 forks 525
 subscribers 152
 created 2015
 updated 2022
 firstCommit 2015
 description The WebAssembly Binary Toolkit
 issues 138

linguistGrammarRepo https://github.com/Alhadis/language-webassembly
 firstCommit 2017
 lastCommit 2017
 committerCount 1
 commitCount 32
 sampleCount 6
 example
  (module
    (import "env" "printInt" (func $printInt (param i32)))
    (func $add (param $lhs i32) (param $rhs i32) (result i32)
      get_local $lhs
      get_local $rhs
      i32.add
    )
  
    (func $main
      (call $printInt
        (call $add (i32.const 9) (i32.const 8))))
  
    (export "main" (func $main))
  )
  

website http://webassembly.org/
status active

tryItOnline wasm

fileExtensions wasm
fileType text
isOpenSource true
writtenIn cpp
indeedJobs webassembly engineer
 2017 5
centralPackageRepositoryCount 0
dblp https://dblp.org/search?q=$WebAssembly$
 hits 106
 publications
  title|year|doi|url
  On the Runtime and Energy Performance of WebAssembly: Is WebAssembly superior to JavaScript yet?|2021|10.1109/ASEW52652.2021.00056|https://dblp.org/rec/conf/kbse/MacedoAPS21
  Wasmati: An efficient static vulnerability scanner for WebAssembly.|2022|10.1016/J.COSE.2022.102745|https://dblp.org/rec/journals/compsec/BritoLSS22
  Isolation without taxation: near-zero-cost transitions for WebAssembly and SFI.|2022|10.1145/3498688|https://dblp.org/rec/journals/pacmpl/KolosickNJWLGJS22
  Rendering Medical Images using WebAssembly.|2022|10.5220/0010833300003123|https://dblp.org/rec/conf/biostec/Jodogne22
  Comparing the Energy Efficiency of WebAssembly and JavaScript in Web Applications on Android Mobile Devices.|2022|10.1145/3530019.3530034|https://dblp.org/rec/conf/ease/HasseltHNRIM22
  Concolic Execution for WebAssembly.|2022|10.4230/LIPICS.ECOOP.2022.11|https://dblp.org/rec/conf/ecoop/MarquesS0A22
  Towards securely migrating webassembly enclaves.|2022|10.1145/3517208.3523755|https://dblp.org/rec/conf/eurosec/PopNMRE22
  WebAssembly as a Common Layer for the Cloud-edge Continuum.|2022|10.1145/3526059.3533618|https://dblp.org/rec/conf/hpdc/MenetreyPFS22
  Static Stack-Preserving Intra-Procedural Slicing of WebAssembly Binaries.|2022|10.1145/3510003.3510070|https://dblp.org/rec/conf/icse/StievenartBR22
  Potential of WebAssembly for Embedded Systems.|2022|10.1109/MECO55406.2022.9797106|https://dblp.org/rec/conf/meco/WallentowitzKD22